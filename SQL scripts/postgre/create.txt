CREATE TYPE tour AS ENUM ('sad', 'ok', 'happy');

CREATE TABLE IF NOT EXISTS tours_list (
  id SERIAL PRIMARY KEY,
  city varchar(45) NOT NULL,
  typeTour tour NOT NULL,
  days int NOT NULL,
  price numeric(2) NOT NULL,
  eat boolean DEFAULT NULL,
  hotel boolean DEFAULT NULL,
  visa boolean DEFAULT NULL,
  transport varchar(45) DEFAULT NULL,
  burning boolean DEFAULT '0',
  size numeric(2) DEFAULT '0'
);

CREATE TABLE IF NOT EXISTS passangers (
  id_group int NOT NULL,
  id_trip int NOT NULL,
  id_client int NOT NULL,
  KEY fk_group_client_idx (id_client),
  CONSTRAINT fk_group_client FOREIGN KEY (id_client) REFERENCES clients (id) ON DELETE NO ACTION ON UPDATE NO ACTION
) ;

CREATE TABLE IF NOT EXISTS sales (
  id_sale SERIAL,
  title varchar(45) DEFAULT NULL UNIQUE,
  size numeric(2) UNIQUE DEFAULT '0',
  PRIMARY KEY (id_sale)
);

CREATE TABLE IF NOT EXISTS clients (
  id SERIAL,
  name varchar(45) NOT NULL,
  surname varchar(45) NOT NULL,
  phone varchar(45) DEFAULT '8(029)999-99-99',
  sales_id_sale int NOT NULL DEFAULT '1',
  trips int DEFAULT '0',
  PRIMARY KEY (id),
  KEY fk_clients_sales_idx (sales_id_sale)
);

CREATE TABLE IF NOT EXISTS trips (
  id_trip SERIAL,
  id_tour INT NOT NULL,
  id_group INT NOT NULL,
  PRIMARY KEY (id_trip),
  CONSTRAINT fk_trip_group
    FOREIGN KEY (id_group)
    REFERENCES userdb.passangers (id_group)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_trip_tour
    FOREIGN KEY (id_tour)
    REFERENCES userdb.tours_list (id)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT);
